(()=>{var r=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.renderList()}static get observedAttributes(){return["items"]}attributeChangedCallback(e,t,s){e==="items"&&t!==s&&this.renderList()}get items(){return JSON.parse(this.getAttribute("items")||"[]")}set items(e){this.setAttribute("items",JSON.stringify(e))}renderList(){let e=[].filter.call(this.childNodes,s=>s.nodeType===1)[0].outerHTML,t=document.createElement("template");this.items.forEach(s=>{let n=e.replace(/\{\{item\}\}/g,s);t.innerHTML+=n}),this.shadowRoot.innerHTML="",this.shadowRoot.appendChild(t.content.cloneNode(!0))}};customElements.define("list-component",r);var a=class extends HTMLElement{name;quote;get name(){return this.name}set name(e){this.name=e}get quote(){return this.quote}set quote(e){this.quote=e}render(){this.innerHTML=`
            \u201C<span id="quote">${this.quote.replace(/\n/g,"<br />")}</span>\u201D
            <div id="nameTag">\u2015<span id="name">${this.name}</span></div>
        `}};function u(){if(!new.target)return new u;let o={},e=[],t={get:function(s,n){let i=String(n);if(isNaN(Number(i))){let d=e.indexOf(i);return s[d]}else return s[i]},set:function(s,n,i){return s[e.length]=i,e.push(n),!0}};return new Proxy(o,t)}var c=class extends r{quote=new a;quotes=new u;constructor(){super();let e=this.getAttribute("quote"),t=document.querySelector(e);t.innerHTML="",t.appendChild(this.quote)}connectedCallback(){super.connectedCallback(),this.generateList()}generateList(){let e=document.createElement("ul");e.setAttribute("id","quotesList"),e.setAttribute("part","quotesList");let t=this.shadowRoot.children;Object.entries(t).forEach(([s,n])=>{n.setAttribute("part","quote"),n.addEventListener("click",()=>{this.selectQuote(s),history.pushState({},"",`${window.location.pathname}?id=${s}`)}),e.appendChild(n)}),this.shadowRoot.innerHTML="",this.shadowRoot.appendChild(e)}selectQuote(e){let t=this.quotes[e];t&&(this.quote.name=t[0],this.quote.quote=t[1],this.quote.render())}};customElements.define("quote-display",a);customElements.define("quote-list",c);customElements.whenDefined("quote-list").then(async()=>{let o=document.querySelector("quote-list");if(o.isConnected){let e=await fetch("quotes.json");if(!e.ok)throw new Error(`Failed to fetch quotes: ${e.statusText}`);o.items=(await e.json()).sort().map(n=>{let i=n.split(/::/);return o.quotes[i[0]]=i,i[0]}),o.connectedCallback();let t=new URLSearchParams(window.location.search),s=t.get("id")||t.get("name");s&&o.selectQuote(s)}});})();
